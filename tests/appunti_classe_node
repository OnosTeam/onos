/setup/node_manager/onosPlug6way0001  


le zone conterranno i gli oggetti web   ...si potranno aggiungere e rimuovere oggetti dalle zone...


il nodo 0 è il router ad esempio il gl.inet o il raspberry    il nodo 1 è l'hardware direttamente collegato al router ..come ad esempio un arduino 2009 collegato tramite seriale usb.
nodi dal 2 in poi sono nodi collegati al nodo 1  via wireless o altro tipo di rete. 

ogni nodo conterrà oggetti web...


all'accensione di un nodo questo proverà ad ottenere un ip dal nodo router  collegandosi momentaneamente a 192.168.0.254
e mandando la query di creazione nuovo nodo mandando il proprio serial number.
in router risponderà con l'indirizzo del nuovo nodo e aggiornerà il dizionario nodi associando l'indirizzo al serial number relativo.


alla creazione di un nuovo nodo verra passato il seriale del nodo e da li onos capirà il tipo di nodo...e in base a quello il sistema creera in automatico i webobject relativi  con nomi credibili ma modificabili , ad esempio per un nodo di tipo ciabatta a 6 prese .
onos creerà 6 oggetti web  che si chiameranno presa1,presa2,presa3 ....

Alla creazione di un nuovo nodo verrà creata anche una zona con il nome del nodo che conterrà gli oggetti web del nodo.


sugli oggetti in vendita sarà applicata un'etichetta con seriale che il cliente inserira sul codice nuovo dispositivo 
dal seriale onos configurerà in automatico il nodo e gli oggetti web.
con qrcode si potrà automatizzare ulteriormente.



per aggiornare lo stato dei pin in ingresso si può mettere un thread in webserver.py che continui a richiamare 
hardware.udate() che restituisce una lista dei dizionari da cambiare  e i valori con cui cambiarli


esempio seriale :
onosRouterGL0001   router onos di tipo gl.inet
onosPlug6way0001
onosPlug2way0001
onosTsensorA0001  
onosTsensorB0001   
onosIRcmdAAA0001  
onosLampAAAA0001
onosLHubAAAA0001    hub luci per più di 6 luci..
onosSwitchAA0001
onosAllarmIR0001  
onosAllarmPR0001    pir
onosAllarmUS0001    ultrasuoni
onosAllarmRd0001    reed
onosProminiA0001    generic arduino pro mini conf A
onosProminiB0001    generic arduino pro mini conf B
onosMegaAAAA0001    generic arduino mega     conf AAAA


ogni nuovo nodo si connetterà momentaneamente ad un indirizzo apposito riservato (come il 253)  e chiederà al server quale indirizzo libero utilizzare.
per creare nuovo nodo dare nel browser : localhost/setup/node_manager/onosPlug6way0001


in alternativa (nrfl01+) l'etichettà conterrà l'indirizzo univoco di ogni dispositivo..


Schermate creazione nuovo nodo:

andare su /setup/node_manager   premere sul pulsante crea nuovo nodo:

il webserver ti manderà a : /setup/node_manager/node_wizard0

dove verrà chiesto:
inserire il codice riportato sull'etichetta del nodo da aggiungere al sistema ad esempio : onosPlug2wayXXXX


una volta inserito premere su submit e il webserver ti indirizzerà alla pagina : /setup/node_manager/node_wizard1


La pagina mostrerà gli oggetti web che saranno creati e chiederà se modificare i nomi:
 
Gli oggetti creati saranno: 
  presa1
  presa2

e saranno messi nella zona creata in automatico con il nome del etichetta
 ad esempio : 
 onosPlug2way0001

 il nome sarà poi modificabile dal cliente come qualsiasi zona



 creazione nodo completata




gli oggetti web avranno un prefisso con riferimento unico al nome del nodo, in questo modo anche con più nodi simili non si farà confusione tra gli oggetti web
ci sarà un dizionario  node_web_obj  dove la chiave sarà il nome univoco del nodo  e il contenuto sarà una lista contenente le classi webobject  

 

Ci sarà una pagina che permetterà di vedere tutte i nodi collegati (con lo stato del nodo , attivo inattivo)

e si potranno rimuovere i nodi , in quel caso tutti gli oggetti collegati al nodo saranno cancellati  e la zona con il nome del nodo sarà eliminata.






arduinoSerial.py/raspberry_handler.py e  hw_node.py web_object.py  saranno richiamati e gestiti allo stesso livello da webserver.py








aggiungere indirizzo nodo a classe webobj?














ogni nodo dovrà avere  le seguenti variabili.


bisognerà modificare l'interfaccia web in modo da consentire la selezione del nodo oltre che del pin (il nodo avrà il nome della room, se ci saranno più node nella stessa room saranno chiamati nomeroom_n0 nomeroom_n1...)


la classe verrà aperta dal prog arduinoserial in questo modo sarà ques'ultimo a gestire i nodi..
ci sarà una funzione in arduinoserial che permetterà dal webserver di creare unn nuovo hw_node

il webobject sarà quindi collegato ad un pin del hw_node  quindi avrà la variabile hw_node oltre che alla variabile pin.
quando un pin cambia arduinoserial chiederà tramite richiesta http al server di settare il pin adeguatamente, e quindi verranno eseguite le funzioni richieste per passaggio di stato del pin.



tipo di nodo  (pro mini , arduino mega ,arduino2009 .....) oppure massimo numero di pin 


array che definirà quali pin sono in ingresso digitale e quali in uscita digitale , e quali sono ingressi analogici e quali uscite analogiche.



array che conterrà lo stato dei pin in uscita...in modo che se anche se si resetti l'arduino relativo al nodo,al riavvio chieda al pc come impostare i pin  e in questo modo possa reimpostarli come erano prima del reset.


array contenente lo stato attuale dei pin in ingresso.




per il salvataggio su xml bisognerà salvare il nome e l'indirizzo del nodo, l'array contenente l'impostazione dei pin  e lo stato di quelli impostati come uscite in modo da reimpostarli al riavvio del sistema.



ogni web object dovrà conservare anche il nome del hwnode relativo al pin 


se si connetterà alla rete un nuovo nodo , arduino serial creerà un nuvo oggetto dandogli il nome new_node+address 


bisogna criptare la comunicazione tra nodi in modo che i nodi di una casa non possano comunicare con quelli di un'altra


